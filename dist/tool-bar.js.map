{"version":3,"file":"tool-bar.js","sources":["../src/items/tool-bar-item.js","../src/items/tool-bar-button-view.js","../src/items/tool-bar-spacer-view.js","../src/tool-bar-manager.js","../src/tool-bar-view.js","../src/raf-debounce.js","../src/tool-bar.js"],"sourcesContent":["/**\r\n * A minimal class used to manage custom HTML elements in Toolbar.\r\n * This is supposed to be Super for other classes.\r\n * @property {HTMLElement} element\r\n * @property {number} priority\r\n * @property {string} group\r\n */\r\nexport class ToolBarItem {\r\n  /**\r\n   * @param {ItemOptions} options\r\n   * @param {string} group\r\n   */\r\n  constructor (options, group) {\r\n    this.element = options.element;\r\n    this.priority = options.priority;\r\n    this.group = group;\r\n  }\r\n\r\n  destroy () {\r\n    if (this.element.parentNode) {\r\n      this.element.parentNode.removeChild(this.element);\r\n    }\r\n\r\n    this.element = null;\r\n  }\r\n}\r\n","import {CompositeDisposable} from 'atom';\r\nimport { ToolBarItem } from './tool-bar-item';\r\n\r\n/**\r\n * A button class with many options\r\n *\r\n * @property {HTMLElement} element\r\n * @property {number} priority\r\n * @property {string} group\r\n *\r\n * @property {ButtonOptions} options\r\n * @property {boolean} enabled\r\n * @property {CompositeDisposable} subscriptions\r\n */\r\nexport class ToolBarButtonView extends ToolBarItem {\r\n  /**\r\n   * @param {ButtonOptions} options\r\n   * @param {string} group\r\n   */\r\n  constructor (options, group) {\r\n    // first calling the super (ToolBarItem) constructor\r\n    super({\r\n      element: document.createElement('button'),\r\n      priority: options.priority\r\n    }, group);\r\n\r\n    this.subscriptions = new CompositeDisposable();\r\n    this.options = options;\r\n    this.enabled = true;\r\n\r\n    // default classes\r\n    this.classNames = ['btn', 'btn-default', 'tool-bar-btn'];\r\n\r\n    if (this.priority < 0) {\r\n      this.putAtEnd();\r\n    }\r\n\r\n    this.addIcon();\r\n    this.addText();\r\n    this.addTooltip();\r\n    this.setStyle('color', options.color);\r\n    this.setStyle('background', options.background);\r\n    this.addClasses();\r\n    this.addOnMouseDown();\r\n    this.addOnClick();\r\n  }\r\n\r\n  destroy () {\r\n    this.subscriptions.dispose();\r\n    this.element.removeEventListener('mousedown', this._onMouseDown);\r\n    this.element.removeEventListener('click', this._onClick);\r\n    super.destroy(); // call super.destroy() in the end\r\n  }\r\n\r\n  /** Put the button at the end of the toolbar using 'tool-bar-item-align-end' class. */\r\n  putAtEnd () {\r\n    this.classNames.push('tool-bar-item-align-end');\r\n  }\r\n\r\n  /** Add an icon for the button using built-in icons. */\r\n  addIcon () {\r\n    if (!this.options.icon) {\r\n      return;\r\n    }\r\n\r\n    if (this.options.iconset) {\r\n      if (this.options.iconset.startsWith('fa')) {\r\n        this.classNames.push(this.options.iconset, `fa-${this.options.icon}`);\r\n      } else {\r\n        this.classNames.push(this.options.iconset, `${this.options.iconset}-${this.options.icon}`);\r\n      }\r\n    } else {\r\n      this.classNames.push(`icon-${this.options.icon}`);\r\n    }\r\n  }\r\n\r\n  /** Adds a text/html to the button */\r\n  addText () {\r\n    if (!this.options.text) {\r\n      return;\r\n    }\r\n\r\n    if (this.options.html) {\r\n      this.element.innerHTML = this.options.text;\r\n    } else {\r\n      this.element.textContent = this.options.text;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * adds a Tooltip for your item.\r\n   * @param {ButtonOptions.tooltip} tooltipOptions\r\n   * @param {ButtonOptions.callback | null} callback\r\n   * @returns {Disposable} a disposable tooltip\r\n   */\r\n  addTooltip () {\r\n    if (!this.options.tooltip) {\r\n      return;\r\n    }\r\n\r\n    let tooltip;\r\n    if (typeof this.options.tooltip === 'string') {\r\n      tooltip = {\r\n        title: this.options.tooltip\r\n      };\r\n    } else {\r\n      tooltip = this.options.tooltip;\r\n    }\r\n\r\n    if (!tooltip.hasOwnProperty('placement')) {\r\n      tooltip.placement = getTooltipPlacement();\r\n    }\r\n\r\n    if (!tooltip.hasOwnProperty('keyBindingCommand') &&\r\n      typeof this.options.callback === 'string'\r\n    ) {\r\n      tooltip.keyBindingCommand = this.options.callback;\r\n    }\r\n\r\n    this.subscriptions.add(atom.tooltips.add(this.element, tooltip));\r\n  }\r\n\r\n  /** Set a style on the button */\r\n  setStyle (style, value) {\r\n    if (value) {\r\n      this.element.style[style] = value;\r\n    }\r\n  }\r\n\r\n  /** Add all the classes (custom and others) to the button */\r\n  addClasses () {\r\n    // add custom classes to the button\r\n    if (this.options.class) {\r\n      if (Array.isArray(this.options.class)) {\r\n        this.classNames.push(...this.options.class);\r\n      } else {\r\n        this.element.classList.add(this.options.class);\r\n      }\r\n    }\r\n    // add other classes\r\n    this.element.classList.add(...this.classNames);\r\n  }\r\n\r\n  setEnabled (enabled) {\r\n    this.element.classList.toggle('disabled', !enabled);\r\n    this.enabled = enabled;\r\n  }\r\n\r\n  setSelected (selected) {\r\n    this.element.classList.toggle('selected', selected);\r\n  }\r\n\r\n  getSelected () {\r\n    return this.element.classList.contains('selected');\r\n  }\r\n\r\n  addOnMouseDown () {\r\n    this._onMouseDown = this._onMouseDown.bind(this);\r\n    this.element.addEventListener('mousedown', this._onMouseDown);\r\n  }\r\n\r\n  _onMouseDown (e) {\r\n    // Avoid taking focus so we can dispatch Atom commands with the correct target.\r\n    e.preventDefault();\r\n  }\r\n\r\n  addOnClick () {\r\n    this._onClick = this._onClick.bind(this);\r\n    this.element.addEventListener('click', this._onClick);\r\n  }\r\n\r\n  _onClick (e) {\r\n    if (this.element && !this.element.classList.contains('disabled')) {\r\n      this.executeCallback(e);\r\n    }\r\n    if (e.preventDefault) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  executeCallback (e) {\r\n    let {callback, data} = this.options;\r\n    if (typeof callback === 'object' && !Array.isArray(callback) && callback) {\r\n      callback = getCallbackModifier(callback, e);\r\n    }\r\n    const workspaceView = atom.views.getView(atom.workspace);\r\n\r\n    // Ensure we don't try to dispatch on any target above `atom-workspace`.\r\n    const target = workspaceView.contains(document.activeElement)\r\n      ? document.activeElement\r\n      : workspaceView;\r\n\r\n    if (!Array.isArray(callback)) {\r\n      callback = [callback];\r\n    }\r\n\r\n    for (let i = 0; i < callback.length; i++) {\r\n      if (typeof callback[i] === 'string') {\r\n        atom.commands.dispatch(target, callback[i]);\r\n      } else if (typeof callback[i] === 'function') {\r\n        callback[i].call(this, data, target);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction getCallbackModifier (callback, {altKey, ctrlKey, shiftKey}) {\r\n  if (!(ctrlKey || altKey || shiftKey)) {\r\n    return callback[''];\r\n  }\r\n  const modifier = Object.keys(callback)\r\n    .filter(Boolean)\r\n    .map(modifiers => modifiers.toLowerCase())\r\n    .reverse()\r\n    .find(item => {\r\n      return checkKeyModifier(item.indexOf('alt'), altKey)\r\n          && checkKeyModifier(item.indexOf('ctrl'), ctrlKey)\r\n          && checkKeyModifier(item.indexOf('shift'), shiftKey);\r\n    });\r\n  return callback[modifier] || callback[''];\r\n}\r\n\r\nfunction checkKeyModifier (keyIndex, key) {\r\n  return !((~keyIndex && !key) || (key && !~keyIndex));\r\n}\r\n\r\n/** get the tooltip placement based on the toolbar position */\r\nfunction getTooltipPlacement () {\r\n  const tooltipPlacement = {\r\n    Top: 'bottom',\r\n    Right: 'left',\r\n    Bottom: 'top',\r\n    Left: 'right'\r\n  };\r\n\r\n  const toolbarPosition = atom.config.get('tool-bar.position');\r\n  return tooltipPlacement[toolbarPosition] || null;\r\n}\r\n","import { ToolBarItem } from './tool-bar-item';\r\n\r\nexport class ToolBarSpacerView extends ToolBarItem {\r\n  constructor (options, group) {\r\n    // first calling the super (ToolBarItem) constructor\r\n    super({\r\n      element: document.createElement('hr'),\r\n      priority: options && options.priority\r\n    }, group);\r\n\r\n    const classNames = ['tool-bar-spacer'];\r\n    if (this.priority < 0) {\r\n      classNames.push('tool-bar-item-align-end');\r\n    }\r\n    this.element.classList.add(...classNames);\r\n  }\r\n}\r\n","import { ToolBarItem } from './items/tool-bar-item';\r\nimport { ToolBarButtonView } from './items/tool-bar-button-view';\r\nimport { ToolBarSpacerView } from './items/tool-bar-spacer-view';\r\n\r\n/**\r\n *\r\n * @property {string} group\r\n * @property {ToolBarView} toolBarView\r\n * @property {TouchBarManager} touchBarManager\r\n */\r\nexport class ToolBarManager {\r\n  /**\r\n   * @param {string} group\r\n   * @param {ToolBarView} toolBarView\r\n   * @param {TouchBarManager} touchBarManager\r\n   */\r\n  constructor (group, toolBarView, touchBarManager) {\r\n    this.group = group;\r\n    this.toolBarView = toolBarView;\r\n    this.touchBarManager = touchBarManager;\r\n  }\r\n\r\n  /**\r\n   * Adds a custom HTML Element to Toolbar. options: {element, priority}\r\n   * @param {ItemOptions} options\r\n   */\r\n  addItem (options) {\r\n    const item = new ToolBarItem(options, this.group);\r\n    this.toolBarView.addItem(item);\r\n    // this.touchBarManager?.addItem(item); // TODO\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * Adds a button. The input to this function is a `ButtonOptions` object\r\n   * @param {ButtonOptions} options\r\n   */\r\n  addButton (options) {\r\n    const button = new ToolBarButtonView(options, this.group);\r\n    this.toolBarView.addItem(button);\r\n    this.touchBarManager?.addButton(button);\r\n    return button;\r\n  }\r\n\r\n  /**\r\n   * Adds a spacer. Optionally, you can pass a `SpacerOptions` object\r\n   * @param options\r\n   * @return {ToolBarSpacerView}\r\n   */\r\n  addSpacer (options) {\r\n    const spacer = new ToolBarSpacerView(options, this.group);\r\n    this.toolBarView.addItem(spacer);\r\n    return spacer;\r\n  }\r\n\r\n  /**\r\n   * Use the method removeItems to remove the buttons added by your package. This is particular useful in your package deactivate method, but can be used at any time.\r\n   */\r\n  removeItems () {\r\n    if (this.toolBarView.items) {\r\n      this.toolBarView.items\r\n        .filter(item => item.group === this.group)\r\n        .forEach(item => this.toolBarView.removeItem(item));\r\n      this.touchBarManager?.removeGroup(this.group);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The onDidDestroy method takes a function that will be called when the tool-bar package is destroyed. This is useful if your package needs to do cleanup when the tool-bar is deactivated but your package continues running.\r\n   * @param {() => void} callback\r\n   */\r\n  onDidDestroy (callback) {\r\n    this.toolBarView.emitter.on('did-destroy', callback);\r\n  }\r\n}\r\n","import {CompositeDisposable, Emitter} from 'atom';\r\nimport {rafDebounce} from './raf-debounce';\r\nimport {useGutter} from './tool-bar.js'\r\n\r\nexport class ToolBarView {\r\n  constructor () {\r\n    this.element = document.createElement('div');\r\n    this.element.classList.add('tool-bar');\r\n    this.items = [];\r\n    this.emitter = new Emitter();\r\n    this.subscriptions = new CompositeDisposable();\r\n\r\n    this.subscriptions.add(\r\n      atom.commands.add(\"atom-workspace\", {\r\n        'tool-bar:toggle': () => this.toggle(),\r\n        'tool-bar:position-top': () => this.updatePosition('Top'),\r\n        'tool-bar:position-right': () => this.updatePosition('Right'),\r\n        'tool-bar:position-bottom': () => this.updatePosition('Bottom'),\r\n        'tool-bar:position-left': () => this.updatePosition('Left'),\r\n      }),\r\n      atom.config.observe('tool-bar.iconSize', newValue => {\r\n        this.updateSize(newValue);\r\n      }),\r\n      atom.config.onDidChange('tool-bar.position', () => {\r\n        this.refresh();\r\n      }),\r\n      atom.config.onDidChange('tool-bar.visible', ({newValue}) => {\r\n        if (newValue) {\r\n          this.show();\r\n        } else {\r\n          this.hide();\r\n        }\r\n      }),\r\n      atom.config.onDidChange('tool-bar.fullWidth', () => {\r\n        this.refresh();\r\n      })\r\n    );\r\n\r\n    if (atom.config.get('tool-bar.visible')) {\r\n      this.show();\r\n    }\r\n\r\n    this.drawGutter = rafDebounce(this.drawGutter.bind(this));\r\n    this.subscriptions.add(this.drawGutter);\r\n\r\n    this.element.addEventListener('scroll', this.drawGutter);\r\n    window.addEventListener('resize', this.drawGutter);\r\n  }\r\n\r\n  addItem (newItem) {\r\n    newItem.priority = this.calculatePriority(newItem);\r\n\r\n    if (atom.inDevMode()) {\r\n      newItem.element.dataset.group = newItem.group;\r\n      newItem.element.dataset.priority = newItem.priority;\r\n    }\r\n\r\n    let index = this.items.findIndex(existingItem =>\r\n      (existingItem.priority > newItem.priority));\r\n    if (index === -1) {\r\n      index = this.items.length;\r\n    }\r\n    const nextItem = this.items[index];\r\n\r\n    this.items.splice(index, 0, newItem);\r\n\r\n    this.element.insertBefore(\r\n      newItem.element,\r\n      nextItem ? nextItem.element : null\r\n    );\r\n\r\n    this.drawGutter();\r\n\r\n    return nextItem;\r\n  }\r\n\r\n  removeItem (item) {\r\n    item.destroy();\r\n    this.items.splice(this.items.indexOf(item), 1);\r\n    this.drawGutter();\r\n  }\r\n\r\n  destroy () {\r\n    this.items.forEach(item => item.destroy());\r\n    this.items = null;\r\n\r\n    this.subscriptions.dispose();\r\n    this.subscriptions = null;\r\n\r\n    this.hide();\r\n    this.element.removeEventListener('scroll', this.drawGutter);\r\n    this.element = null;\r\n\r\n    window.removeEventListener('resize', this.drawGutter);\r\n\r\n    this.emitter.emit('did-destroy');\r\n    this.emitter.dispose();\r\n    this.emitter = null;\r\n  }\r\n\r\n  calculatePriority (item) {\r\n    if (!isNaN(item.priority)) {\r\n      return item.priority;\r\n    }\r\n    const lastItem = this.items.filter(i => i.group !== item.group).pop();\r\n    return lastItem && !isNaN(lastItem.priority)\r\n      ? lastItem.priority + 1\r\n      : 50;\r\n  }\r\n\r\n  updateSize (size) {\r\n    this.element.classList.remove(\r\n      'tool-bar-12px',\r\n      'tool-bar-14px',\r\n      'tool-bar-16px',\r\n      'tool-bar-18px',\r\n      'tool-bar-21px',\r\n      'tool-bar-24px',\r\n      'tool-bar-28px',\r\n      'tool-bar-32px'\r\n    );\r\n    this.element.classList.add(`tool-bar-${size}`);\r\n  }\r\n\r\n  updatePosition (position) {\r\n    this.element.classList.remove(\r\n      'tool-bar-top',\r\n      'tool-bar-right',\r\n      'tool-bar-bottom',\r\n      'tool-bar-left',\r\n      'tool-bar-horizontal',\r\n      'tool-bar-vertical'\r\n    );\r\n\r\n    this.panel = this.createPanel(position);\r\n\r\n    this.element.classList.add(`tool-bar-${position.toLowerCase()}`);\r\n    if (position === 'Top' || position === 'Bottom') {\r\n      this.element.classList.add('tool-bar-horizontal');\r\n    } else {\r\n      this.element.classList.add('tool-bar-vertical');\r\n    }\r\n\r\n    this.drawGutter();\r\n    atom.config.set('tool-bar.position', position);\r\n  }\r\n\r\n  createPanel (position) {\r\n    const fullWidth = atom.config.get('tool-bar.fullWidth');\r\n    switch (position) {\r\n      case 'Top':\r\n        return fullWidth\r\n          ? atom.workspace.addHeaderPanel({item: this.element})\r\n          : atom.workspace.addTopPanel({item: this.element});\r\n      case 'Right':\r\n        return atom.workspace.addRightPanel({item: this.element});\r\n      case 'Bottom':\r\n        return fullWidth\r\n          ? atom.workspace.addFooterPanel({item: this.element})\r\n          : atom.workspace.addBottomPanel({item: this.element});\r\n      case 'Left':\r\n        return atom.workspace.addLeftPanel({item: this.element, priority: 50});\r\n    }\r\n  }\r\n\r\n  drawGutter () {\r\n    if (!useGutter) {return;}\r\n\r\n    this.element.classList.remove('gutter-top', 'gutter-bottom');\r\n\r\n    const visibleHeight = this.element.offsetHeight;\r\n    const scrollHeight = this.element.scrollHeight;\r\n    const hiddenHeight = scrollHeight - visibleHeight;\r\n\r\n    if (visibleHeight < scrollHeight) {\r\n      if (this.element.scrollTop > 0) {\r\n        this.element.classList.add('gutter-top');\r\n      }\r\n      if (this.element.scrollTop < hiddenHeight) {\r\n        this.element.classList.add('gutter-bottom');\r\n      }\r\n    }\r\n  }\r\n\r\n  hide () {\r\n    if (this.panel != null) {\r\n      if (this.element.parentNode) {\r\n        this.element.parentNode.removeChild(this.element);\r\n      }\r\n      this.panel.destroy();\r\n      this.panel = null;\r\n    }\r\n  }\r\n\r\n  show () {\r\n    this.hide();\r\n    this.updatePosition(atom.config.get('tool-bar.position'));\r\n    this.updateSize(atom.config.get('tool-bar.iconSize'));\r\n  }\r\n\r\n  refresh () {\r\n    if (atom.config.get('tool-bar.visible')) {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  toggle () {\r\n    atom.config.set('tool-bar.visible', !atom.config.get('tool-bar.visible'));\r\n  }\r\n}\r\n","export function rafDebounce (fn) {\r\n  let args, context, requestID;\r\n\r\n  function later () {\r\n    fn.apply(context, args);\r\n    args = context = requestID = null;\r\n  }\r\n\r\n  function debounced () {\r\n    if (fn == null) {\r\n      throw new Error('raf debounced function is already disposed.');\r\n    }\r\n    args = arguments;\r\n    context = this;\r\n    window.cancelAnimationFrame(requestID);\r\n    requestID = window.requestAnimationFrame(later);\r\n  }\r\n\r\n  debounced.dispose = () => {\r\n    window.cancelAnimationFrame(requestID);\r\n    fn = args = context = requestID = null;\r\n  };\r\n\r\n  return debounced;\r\n}\r\n","import {ToolBarManager} from './tool-bar-manager';\r\nimport {ToolBarView} from './tool-bar-view';\r\n\r\nlet toolBarView = null;\r\nlet touchBarManager = null;\r\n\r\nexport let useGutter = false;\r\n\r\nexport function activate() {\r\n  toolBarView = new ToolBarView();\r\n  useTouchBar();\r\n  useGutter = atom.config.get('tool-bar.useGutter');\r\n}\r\n\r\nasync function useTouchBar() {\r\n  if (atom.config.get('tool-bar.useTouchBar') && process.platform === 'darwin') {\r\n    let {TouchBarManager} = await import('./touch-bar-manager');\r\n    touchBarManager = new TouchBarManager();\r\n  }\r\n}\r\n\r\nexport function deactivate() {\r\n  toolBarView?.destroy();\r\n  toolBarView = null;\r\n  touchBarManager?.destroy();\r\n  touchBarManager = null;\r\n}\r\n\r\nexport function provideToolBar () {\r\n  return (group) => new ToolBarManager(group, toolBarView, touchBarManager);\r\n}\r\n\r\nexport const config = {\r\n  visible: {\r\n    type: 'boolean',\r\n    default: true,\r\n    order: 1\r\n  },\r\n  iconSize: {\r\n    type: 'string',\r\n    default: '24px',\r\n    enum: ['12px', '14px', '16px', '18px', '21px', '24px', '28px', '32px'],\r\n    order: 2\r\n  },\r\n  position: {\r\n    type: 'string',\r\n    default: 'Top',\r\n    enum: ['Top', 'Right', 'Bottom', 'Left'],\r\n    order: 3\r\n  },\r\n  fullWidth: {\r\n    type: 'boolean',\r\n    default: true,\r\n    order: 4\r\n  },\r\n  useTouchBar: {\r\n    title: 'Use TouchBar',\r\n    description: 'Show seven first tool bar buttons in the TouchBar',\r\n    type: 'boolean',\r\n    default: true,\r\n    order: 5\r\n  },\r\n  useGutter: {\r\n    title: 'Use Gutter Shadow',\r\n    description: 'The gutter shadow indicates that some icons are hidden and scrolling is needed. This is off by default (slows down the loading of Tool-bar).',\r\n    type: 'boolean',\r\n    default: false,\r\n    order: 6\r\n  }\r\n};\r\n"],"names":["ToolBarItem","constructor","options","group","element","priority","destroy","this","parentNode","removeChild","ToolBarButtonView","document","createElement","subscriptions","CompositeDisposable","enabled","classNames","putAtEnd","addIcon","addText","addTooltip","setStyle","color","background","addClasses","addOnMouseDown","addOnClick","dispose","removeEventListener","_onMouseDown","_onClick","push","icon","iconset","startsWith","text","html","innerHTML","textContent","tooltip","title","hasOwnProperty","placement","toolbarPosition","atom","config","get","Top","Right","Bottom","Left","getTooltipPlacement","callback","keyBindingCommand","add","tooltips","style","value","class","Array","isArray","classList","setEnabled","toggle","setSelected","selected","getSelected","contains","bind","addEventListener","e","preventDefault","executeCallback","stopPropagation","data","altKey","ctrlKey","shiftKey","modifier","Object","keys","filter","Boolean","map","modifiers","toLowerCase","reverse","find","item","checkKeyModifier","indexOf","getCallbackModifier","workspaceView","views","getView","workspace","target","activeElement","i","length","commands","dispatch","call","keyIndex","key","ToolBarSpacerView","ToolBarManager","toolBarView","touchBarManager","addItem","addButton","button","addSpacer","spacer","removeItems","items","forEach","removeItem","removeGroup","onDidDestroy","emitter","on","ToolBarView","Emitter","updatePosition","observe","newValue","updateSize","onDidChange","refresh","show","hide","drawGutter","fn","args","context","requestID","later","apply","debounced","Error","arguments","window","cancelAnimationFrame","requestAnimationFrame","rafDebounce","newItem","calculatePriority","inDevMode","dataset","index","findIndex","existingItem","nextItem","splice","insertBefore","emit","isNaN","lastItem","pop","size","remove","position","panel","createPanel","set","fullWidth","addHeaderPanel","addTopPanel","addRightPanel","addFooterPanel","addBottomPanel","addLeftPanel","useGutter","visibleHeight","offsetHeight","scrollHeight","hiddenHeight","scrollTop","async","process","platform","TouchBarManager","Promise","useTouchBar","visible","type","default","order","iconSize","enum","description"],"mappings":"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"}