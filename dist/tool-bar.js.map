{"version":3,"file":"tool-bar.js","sources":["../src/items/tool-bar-item.js","../src/items/tool-bar-button-view.js","../src/items/tool-bar-spacer-view.js","../src/tool-bar-manager.js","../src/tool-bar-view.js","../src/raf-debounce.js","../src/tool-bar.js"],"sourcesContent":["/**\n * A minimal class used to manage custom HTML elements in Toolbar.\n * This is supposed to be Super for other classes.\n * @property {HTMLElement} element\n * @property {number} priority\n * @property {string} group\n */\nexport class ToolBarItem {\n  /**\n   * @param {ItemOptions} options\n   * @param {string} group\n   */\n  constructor (options, group) {\n    this.element = options.element;\n    this.priority = options.priority;\n    this.group = group;\n  }\n\n  destroy () {\n    if (this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n\n    this.element = null;\n  }\n}\n","import {CompositeDisposable} from 'atom';\nimport { ToolBarItem } from './tool-bar-item';\n\n/**\n * A button class with many options\n *\n * @property {HTMLElement} element\n * @property {number} priority\n * @property {string} group\n *\n * @property {ButtonOptions} options\n * @property {boolean} enabled\n * @property {CompositeDisposable} subscriptions\n */\nexport class ToolBarButtonView extends ToolBarItem {\n  /**\n   * @param {ButtonOptions} options\n   * @param {string} group\n   */\n  constructor (options, group) {\n    // first calling the super (ToolBarItem) constructor\n    super({\n      element: document.createElement('button'),\n      priority: options.priority\n    }, group);\n\n    this.subscriptions = new CompositeDisposable();\n    this.options = options;\n    this.enabled = true;\n\n    // default classes\n    this.classNames = ['btn', 'btn-default', 'tool-bar-btn'];\n\n    if (this.priority < 0) {\n      this.putAtEnd();\n    }\n\n    this.addIcon();\n    this.addText();\n    this.addTooltip();\n    this.setStyle('color', options.color);\n    this.setStyle('background', options.background);\n    this.addClasses();\n    this.addOnMouseDown();\n    this.addOnClick();\n  }\n\n  destroy () {\n    this.subscriptions.dispose();\n    this.element.removeEventListener('mousedown', this._onMouseDown);\n    this.element.removeEventListener('click', this._onClick);\n    super.destroy(); // call super.destroy() in the end\n  }\n\n  /** Put the button at the end of the toolbar using 'tool-bar-item-align-end' class. */\n  putAtEnd () {\n    this.classNames.push('tool-bar-item-align-end');\n  }\n\n  /** Add an icon for the button using built-in icons. */\n  addIcon () {\n    if (!this.options.icon) {\n      return;\n    }\n\n    if (this.options.iconset) {\n      if (this.options.iconset.startsWith('fa')) {\n        this.classNames.push(this.options.iconset, `fa-${this.options.icon}`);\n      } else {\n        this.classNames.push(this.options.iconset, `${this.options.iconset}-${this.options.icon}`);\n      }\n    } else {\n      this.classNames.push(`icon-${this.options.icon}`);\n    }\n  }\n\n  /** Adds a text/html to the button */\n  addText () {\n    if (!this.options.text) {\n      return;\n    }\n\n    if (this.options.html) {\n      this.element.innerHTML = this.options.text;\n    } else {\n      this.element.textContent = this.options.text;\n    }\n  }\n\n  /**\n   * adds a Tooltip for your item.\n   * @param {ButtonOptions.tooltip} tooltipOptions\n   * @param {ButtonOptions.callback | null} callback\n   * @returns {Disposable} a disposable tooltip\n   */\n  addTooltip () {\n    if (!this.options.tooltip) {\n      return;\n    }\n\n    let tooltip;\n    if (typeof this.options.tooltip === 'string') {\n      tooltip = {\n        title: this.options.tooltip\n      };\n    } else {\n      tooltip = this.options.tooltip;\n    }\n\n    if (!tooltip.hasOwnProperty('placement')) {\n      tooltip.placement = getTooltipPlacement();\n    }\n\n    if (!tooltip.hasOwnProperty('keyBindingCommand') &&\n      typeof this.options.callback === 'string'\n    ) {\n      tooltip.keyBindingCommand = this.options.callback;\n    }\n\n    this.subscriptions.add(atom.tooltips.add(this.element, tooltip));\n  }\n\n  /** Set a style on the button */\n  setStyle (style, value) {\n    if (value) {\n      this.element.style[style] = value;\n    }\n  }\n\n  /** Add all the classes (custom and others) to the button */\n  addClasses () {\n    // add custom classes to the button\n    if (this.options.class) {\n      if (Array.isArray(this.options.class)) {\n        this.classNames.push(...this.options.class);\n      } else {\n        this.element.classList.add(this.options.class);\n      }\n    }\n    // add other classes\n    this.element.classList.add(...this.classNames);\n  }\n\n  setEnabled (enabled) {\n    this.element.classList.toggle('disabled', !enabled);\n    this.enabled = enabled;\n  }\n\n  setSelected (selected) {\n    this.element.classList.toggle('selected', selected);\n  }\n\n  getSelected () {\n    return this.element.classList.contains('selected');\n  }\n\n  addOnMouseDown () {\n    this._onMouseDown = this._onMouseDown.bind(this);\n    this.element.addEventListener('mousedown', this._onMouseDown);\n  }\n\n  _onMouseDown (e) {\n    // Avoid taking focus so we can dispatch Atom commands with the correct target.\n    e.preventDefault();\n  }\n\n  addOnClick () {\n    this._onClick = this._onClick.bind(this);\n    this.element.addEventListener('click', this._onClick);\n  }\n\n  _onClick (e) {\n    if (this.element && !this.element.classList.contains('disabled')) {\n      this.executeCallback(e);\n    }\n    if (e.preventDefault) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  executeCallback (e) {\n    let {callback, data} = this.options;\n    if (typeof callback === 'object' && !Array.isArray(callback) && callback) {\n      callback = getCallbackModifier(callback, e);\n    }\n    const workspaceView = atom.views.getView(atom.workspace);\n\n    // Ensure we don't try to dispatch on any target above `atom-workspace`.\n    const target = workspaceView.contains(document.activeElement)\n      ? document.activeElement\n      : workspaceView;\n\n    if (!Array.isArray(callback)) {\n      callback = [callback];\n    }\n\n    for (let i = 0; i < callback.length; i++) {\n      if (typeof callback[i] === 'string') {\n        atom.commands.dispatch(target, callback[i]);\n      } else if (typeof callback[i] === 'function') {\n        callback[i].call(this, data, target);\n      }\n    }\n  }\n}\n\nfunction getCallbackModifier (callback, {altKey, ctrlKey, shiftKey}) {\n  if (!(ctrlKey || altKey || shiftKey)) {\n    return callback[''];\n  }\n  const modifier = Object.keys(callback)\n    .filter(Boolean)\n    .map(modifiers => modifiers.toLowerCase())\n    .reverse()\n    .find(item => {\n      return checkKeyModifier(item.indexOf('alt'), altKey)\n          && checkKeyModifier(item.indexOf('ctrl'), ctrlKey)\n          && checkKeyModifier(item.indexOf('shift'), shiftKey);\n    });\n  return callback[modifier] || callback[''];\n}\n\nfunction checkKeyModifier (keyIndex, key) {\n  return !((~keyIndex && !key) || (key && !~keyIndex));\n}\n\n/** get the tooltip placement based on the toolbar position */\nfunction getTooltipPlacement () {\n  const tooltipPlacement = {\n    Top: 'bottom',\n    Right: 'left',\n    Bottom: 'top',\n    Left: 'right'\n  };\n\n  const toolbarPosition = atom.config.get('tool-bar.position');\n  return tooltipPlacement[toolbarPosition] || null;\n}\n","import { ToolBarItem } from './tool-bar-item';\n\nexport class ToolBarSpacerView extends ToolBarItem {\n  constructor (options, group) {\n    // first calling the super (ToolBarItem) constructor\n    super({\n      element: document.createElement('hr'),\n      priority: options && options.priority\n    }, group);\n\n    const classNames = ['tool-bar-spacer'];\n    if (this.priority < 0) {\n      classNames.push('tool-bar-item-align-end');\n    }\n    this.element.classList.add(...classNames);\n  }\n}\n","import { ToolBarItem } from './items/tool-bar-item';\nimport { ToolBarButtonView } from './items/tool-bar-button-view';\nimport { ToolBarSpacerView } from './items/tool-bar-spacer-view';\n\n/**\n *\n * @property {string} group\n * @property {ToolBarView} toolBarView\n * @property {TouchBarManager} touchBarManager\n */\nexport class ToolBarManager {\n  /**\n   * @param {string} group\n   * @param {ToolBarView} toolBarView\n   * @param {TouchBarManager} touchBarManager\n   */\n  constructor (group, toolBarView, touchBarManager) {\n    this.group = group;\n    this.toolBarView = toolBarView;\n    this.touchBarManager = touchBarManager;\n  }\n\n  /**\n   * Adds a custom HTML Element to Toolbar. options: {element, priority}\n   * @param {ItemOptions} options\n   */\n  addItem (options) {\n    const item = new ToolBarItem(options, this.group);\n    this.toolBarView.addItem(item);\n    // this.touchBarManager?.addItem(item); // TODO\n    return item;\n  }\n\n  /**\n   * Adds a button. The input to this function is a `ButtonOptions` object\n   * @param {ButtonOptions} options\n   */\n  addButton (options) {\n    const button = new ToolBarButtonView(options, this.group);\n    this.toolBarView.addItem(button);\n    this.touchBarManager?.addButton(button);\n    return button;\n  }\n\n  /**\n   * Adds a spacer. Optionally, you can pass a `SpacerOptions` object\n   * @param options\n   * @return {ToolBarSpacerView}\n   */\n  addSpacer (options) {\n    const spacer = new ToolBarSpacerView(options, this.group);\n    this.toolBarView.addItem(spacer);\n    return spacer;\n  }\n\n  /**\n   * Use the method removeItems to remove the buttons added by your package. This is particular useful in your package deactivate method, but can be used at any time.\n   */\n  removeItems () {\n    if (this.toolBarView.items) {\n      this.toolBarView.items\n        .filter(item => item.group === this.group)\n        .forEach(item => this.toolBarView.removeItem(item));\n      this.touchBarManager?.removeGroup(this.group);\n    }\n  }\n\n  /**\n   * The onDidDestroy method takes a function that will be called when the tool-bar package is destroyed. This is useful if your package needs to do cleanup when the tool-bar is deactivated but your package continues running.\n   * @param {() => void} callback\n   */\n  onDidDestroy (callback) {\n    this.toolBarView.emitter.on('did-destroy', callback);\n  }\n}\n","import {CompositeDisposable, Emitter} from 'atom';\nimport {rafDebounce} from './raf-debounce';\nimport {useGutter} from './tool-bar.js'\n\nexport class ToolBarView {\n  constructor () {\n    this.element = document.createElement('div');\n    this.element.classList.add('tool-bar');\n    this.items = [];\n    this.emitter = new Emitter();\n    this.subscriptions = new CompositeDisposable();\n\n    this.subscriptions.add(\n      atom.commands.add(\"atom-workspace\", {\n        'tool-bar:toggle': () => this.toggle(),\n        'tool-bar:position-top': () => this.updatePosition('Top'),\n        'tool-bar:position-right': () => this.updatePosition('Right'),\n        'tool-bar:position-bottom': () => this.updatePosition('Bottom'),\n        'tool-bar:position-left': () => this.updatePosition('Left'),\n      }),\n      atom.config.observe('tool-bar.iconSize', newValue => {\n        this.updateSize(newValue);\n      }),\n      atom.config.onDidChange('tool-bar.position', () => {\n        this.refresh();\n      }),\n      atom.config.onDidChange('tool-bar.visible', ({newValue}) => {\n        if (newValue) {\n          this.show();\n        } else {\n          this.hide();\n        }\n      }),\n      atom.config.onDidChange('tool-bar.fullWidth', () => {\n        this.refresh();\n      })\n    );\n\n    if (atom.config.get('tool-bar.visible')) {\n      this.show();\n    }\n\n    this.drawGutter = rafDebounce(this.drawGutter.bind(this));\n    this.subscriptions.add(this.drawGutter);\n\n    this.element.addEventListener('scroll', this.drawGutter);\n    window.addEventListener('resize', this.drawGutter);\n  }\n\n  addItem (newItem) {\n    newItem.priority = this.calculatePriority(newItem);\n\n    if (atom.inDevMode()) {\n      newItem.element.dataset.group = newItem.group;\n      newItem.element.dataset.priority = newItem.priority;\n    }\n\n    let index = this.items.findIndex(existingItem =>\n      (existingItem.priority > newItem.priority));\n    if (index === -1) {\n      index = this.items.length;\n    }\n    const nextItem = this.items[index];\n\n    this.items.splice(index, 0, newItem);\n\n    this.element.insertBefore(\n      newItem.element,\n      nextItem ? nextItem.element : null\n    );\n\n    this.drawGutter();\n\n    return nextItem;\n  }\n\n  removeItem (item) {\n    item.destroy();\n    this.items.splice(this.items.indexOf(item), 1);\n    this.drawGutter();\n  }\n\n  destroy () {\n    this.items.forEach(item => item.destroy());\n    this.items = null;\n\n    this.subscriptions.dispose();\n    this.subscriptions = null;\n\n    this.hide();\n    this.element.removeEventListener('scroll', this.drawGutter);\n    this.element = null;\n\n    window.removeEventListener('resize', this.drawGutter);\n\n    this.emitter.emit('did-destroy');\n    this.emitter.dispose();\n    this.emitter = null;\n  }\n\n  calculatePriority (item) {\n    if (!isNaN(item.priority)) {\n      return item.priority;\n    }\n    const lastItem = this.items.filter(i => i.group !== item.group).pop();\n    return lastItem && !isNaN(lastItem.priority)\n      ? lastItem.priority + 1\n      : 50;\n  }\n\n  updateSize (size) {\n    this.element.classList.remove(\n      'tool-bar-12px',\n      'tool-bar-14px',\n      'tool-bar-16px',\n      'tool-bar-18px',\n      'tool-bar-21px',\n      'tool-bar-24px',\n      'tool-bar-28px',\n      'tool-bar-32px'\n    );\n    this.element.classList.add(`tool-bar-${size}`);\n  }\n\n  updatePosition (position) {\n    this.element.classList.remove(\n      'tool-bar-top',\n      'tool-bar-right',\n      'tool-bar-bottom',\n      'tool-bar-left',\n      'tool-bar-horizontal',\n      'tool-bar-vertical'\n    );\n\n    this.panel = this.createPanel(position);\n\n    this.element.classList.add(`tool-bar-${position.toLowerCase()}`);\n    if (position === 'Top' || position === 'Bottom') {\n      this.element.classList.add('tool-bar-horizontal');\n    } else {\n      this.element.classList.add('tool-bar-vertical');\n    }\n\n    this.drawGutter();\n    atom.config.set('tool-bar.position', position);\n  }\n\n  createPanel (position) {\n    const fullWidth = atom.config.get('tool-bar.fullWidth');\n    switch (position) {\n      case 'Top':\n        return fullWidth\n          ? atom.workspace.addHeaderPanel({item: this.element})\n          : atom.workspace.addTopPanel({item: this.element});\n      case 'Right':\n        return atom.workspace.addRightPanel({item: this.element});\n      case 'Bottom':\n        return fullWidth\n          ? atom.workspace.addFooterPanel({item: this.element})\n          : atom.workspace.addBottomPanel({item: this.element});\n      case 'Left':\n        return atom.workspace.addLeftPanel({item: this.element, priority: 50});\n    }\n  }\n\n  drawGutter () {\n    if (!useGutter) {return;}\n\n    this.element.classList.remove('gutter-top', 'gutter-bottom');\n\n    const visibleHeight = this.element.offsetHeight;\n    const scrollHeight = this.element.scrollHeight;\n    const hiddenHeight = scrollHeight - visibleHeight;\n\n    if (visibleHeight < scrollHeight) {\n      if (this.element.scrollTop > 0) {\n        this.element.classList.add('gutter-top');\n      }\n      if (this.element.scrollTop < hiddenHeight) {\n        this.element.classList.add('gutter-bottom');\n      }\n    }\n  }\n\n  hide () {\n    if (this.panel != null) {\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.panel.destroy();\n      this.panel = null;\n    }\n  }\n\n  show () {\n    this.hide();\n    this.updatePosition(atom.config.get('tool-bar.position'));\n    this.updateSize(atom.config.get('tool-bar.iconSize'));\n  }\n\n  refresh () {\n    if (atom.config.get('tool-bar.visible')) {\n      this.show();\n    }\n  }\n\n  toggle () {\n    atom.config.set('tool-bar.visible', !atom.config.get('tool-bar.visible'));\n  }\n}\n","export function rafDebounce (fn) {\n  let args, context, requestID;\n\n  function later () {\n    fn.apply(context, args);\n    args = context = requestID = null;\n  }\n\n  function debounced () {\n    if (fn == null) {\n      throw new Error('raf debounced function is already disposed.');\n    }\n    args = arguments;\n    context = this;\n    window.cancelAnimationFrame(requestID);\n    requestID = window.requestAnimationFrame(later);\n  }\n\n  debounced.dispose = () => {\n    window.cancelAnimationFrame(requestID);\n    fn = args = context = requestID = null;\n  };\n\n  return debounced;\n}\n","import {ToolBarManager} from './tool-bar-manager';\nimport {ToolBarView} from './tool-bar-view';\n\nlet toolBarView = null;\nlet touchBarManager = null;\n\nexport let useGutter = false;\n\nexport function activate() {\n  toolBarView = new ToolBarView();\n  useTouchBar();\n  useGutter = atom.config.get('tool-bar.useGutter');\n}\n\nasync function useTouchBar() {\n  if (atom.config.get('tool-bar.useTouchBar') && process.platform === 'darwin') {\n    let TouchBarManager = await import('./touch-bar-manager');\n    touchBarManager = new TouchBarManager();\n  }\n}\n\nexport function deactivate() {\n  toolBarView?.destroy();\n  toolBarView = null;\n  touchBarManager?.destroy();\n  touchBarManager = null;\n}\n\nexport function provideToolBar () {\n  return (group) => new ToolBarManager(group, toolBarView, touchBarManager);\n}\n\nexport const config = {\n  visible: {\n    type: 'boolean',\n    default: true,\n    order: 1\n  },\n  iconSize: {\n    type: 'string',\n    default: '24px',\n    enum: ['12px', '14px', '16px', '18px', '21px', '24px', '28px', '32px'],\n    order: 2\n  },\n  position: {\n    type: 'string',\n    default: 'Top',\n    enum: ['Top', 'Right', 'Bottom', 'Left'],\n    order: 3\n  },\n  fullWidth: {\n    type: 'boolean',\n    default: true,\n    order: 4\n  },\n  useTouchBar: {\n    title: 'Use TouchBar',\n    description: 'Show seven first tool bar buttons in the TouchBar',\n    type: 'boolean',\n    default: true,\n    order: 5\n  },\n  useGutter: {\n    title: 'Use Gutter Shadow',\n    description: 'The gutter shadow indicates that some icons are hidden and scrolling is needed. This is off by default (slows down the loading of Tool-bar).',\n    type: 'boolean',\n    default: false,\n    order: 6\n  }\n};\n"],"names":["ToolBarItem","constructor","options","group","element","priority","destroy","this","parentNode","removeChild","ToolBarButtonView","document","createElement","subscriptions","CompositeDisposable","enabled","classNames","putAtEnd","addIcon","addText","addTooltip","setStyle","color","background","addClasses","addOnMouseDown","addOnClick","dispose","removeEventListener","_onMouseDown","_onClick","push","icon","iconset","startsWith","text","html","innerHTML","textContent","tooltip","title","hasOwnProperty","placement","toolbarPosition","atom","config","get","Top","Right","Bottom","Left","getTooltipPlacement","callback","keyBindingCommand","add","tooltips","style","value","class","Array","isArray","classList","setEnabled","toggle","setSelected","selected","getSelected","contains","bind","addEventListener","e","preventDefault","executeCallback","stopPropagation","data","altKey","ctrlKey","shiftKey","modifier","Object","keys","filter","Boolean","map","modifiers","toLowerCase","reverse","find","item","checkKeyModifier","indexOf","getCallbackModifier","workspaceView","views","getView","workspace","target","activeElement","i","length","commands","dispatch","call","keyIndex","key","ToolBarSpacerView","ToolBarManager","toolBarView","touchBarManager","addItem","addButton","button","addSpacer","spacer","removeItems","items","forEach","removeItem","removeGroup","onDidDestroy","emitter","on","ToolBarView","Emitter","updatePosition","observe","newValue","updateSize","onDidChange","refresh","show","hide","drawGutter","fn","args","context","requestID","later","apply","debounced","Error","arguments","window","cancelAnimationFrame","requestAnimationFrame","rafDebounce","newItem","calculatePriority","inDevMode","dataset","index","findIndex","existingItem","nextItem","splice","insertBefore","emit","isNaN","lastItem","pop","size","remove","position","panel","createPanel","set","fullWidth","addHeaderPanel","addTopPanel","addRightPanel","addFooterPanel","addBottomPanel","addLeftPanel","useGutter","visibleHeight","offsetHeight","scrollHeight","hiddenHeight","scrollTop","async","process","platform","TouchBarManager","Promise","useTouchBar","visible","type","default","order","iconSize","enum","description"],"mappings":"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"}